#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
#include<windows.h>
int MINPRIORITY(int A[],double P[],int k,char status[]);
void ARRIVALTIME(char stat[],int Arr[],int n);
void UPDATEDATA(int r,int A[],double D[],int d,char status[]);
int c=0,max_c=0;
int main()
{   printf("      *********************AlGORITHM******************    ");
	printf("\nEnter the no. of processes you want to load into the memory \n");
	int r;
	scanf("%d",&r);
	r+=1;
	int A[r],B[r];
	double  P[r];
	char stat[r];
	printf("Enter the burst time and the arrival time \n");
	for(int k=1;k<r;k++)
	{
		printf("Enter details of %d process\n",k);
		printf("Enter Burst Time: ");
		scanf("%d",&A[k]);
		P[k]=1;
		printf("Enter Arrival Time: ");
		scanf("%d",&B[k]);
		stat[k]='P';
		max_c+=A[k];
	}
	printf("Initial Table is this:\n");
	printf("Process      Burst Time     Arrival Time  Priority \n");
	for(int i=1;i<r;i++)
	{
		printf("%d               %d             %d           %lf \n",i,A[i],B[i],P[i]);
	}
	printf("\n\n");
	printf("Initiallly each process will be having priority one   \n\n\n");
	while(1)
	{
		int b,flag=0;
		ARRIVALTIME(stat,B,r);
		b=MINPRIORITY(A,P,r,stat);
		if(b!=-1)
		{
			UPDATEDATA(b,A,P,r,stat);
		}
		else
		{
			for(int i=1;i<r;i++)
			{
				if(P[i]!=-1)
				{
					flag=1;
					break;
				}
			}
			if(flag==0)
			{
				printf("\n\n");
				printf(" processes are over \n");
				break;
			}
			else
			continue;
		}
	}
}
int MINPRIORITY(int A[],double Z[],int w,char stat[])
{
	double m=0;int m1=0,p,f=0;
	for(int i=1;i<w;i++)
	{
		if((m<Z[i])&&(Z[i]!=-1)&&(stat[i]=='A'))
		{
			m=Z[i];
			p=i;
			m1=A[i];
			f=1;
		}
		else if((m==Z[i])&&(stat[i]=='A'))
		{
			if(m1>A[i])
			{
				m1=A[i];
				m=Z[i];
				p=i;
			}
		}
	}
	if(f==1)
	{
		c+=A[p];
		return p;
	}
	else
	{
		return -1;
	}
}
void UPDATEDATA(int r,int Arr[],double D[],int d,char stat[])
{
	double c;
	c=Arr[r];
	Arr[r]=0;D[r]=-1;
	printf("Process %d is running for %f sec....... \n\n",r,c);
	Sleep(c*1000);
	printf("Wait till table is updated\n\n\n");
	Sleep(3000);
	for(int i=1;i<d;i++)
	{
		if((i!=r)&&(D[i]!=-1))
		{
		D[i]=1+(c/Arr[i]);
		}
	}
	printf(" Updated table is \n\n");
	printf("Process      Burst Time      Priority \n");
	for(int i=1;i<d;i++)
		{
			printf("%d               %d             %lf \n",i,Arr[i],D[i]);
		}
}
void ARRIVALTIME(char s[],int B[],int n)
{
	int f=0;
	while(1)
	{
		f=0;
		for(int i=0;i<n;i++)
		{
			if((B[i]<=c)&&(s[i]=='P'))
			{
				s[i]='A';
				f=1;
			}
		}
		if((f==0)&&(c<max_c))
		{
			printf("Waiting for process to come.... \n\n");
			c++;
			
		}
		else
		{
			break;
		}
	}
}
